gc()
# Leitura dos pacotes
pacman::p_load(openxlsx, knitr, kableExtra, dplyr, ggplot2, scales, ggrepel, tibble, gridExtra)
Z = read.xlsx("Dados-IP-R/MIP2015_12s.xlsx", sheet = "Z", colNames = FALSE) # Consumo intermediário
y = read.xlsx("Dados-IP-R/MIP2015_12s.xlsx", sheet = "y", colNames = FALSE) # Demanda final
x = read.xlsx("Dados-IP-R/MIP2015_12s.xlsx", sheet = "x", colNames = FALSE) # Valor Bruto da Produção (VBP)
v = read.xlsx("Dados-IP-R/MIP2015_12s.xlsx", sheet = "v", colNames = FALSE) # Valor adicionado
r = read.xlsx("Dados-IP-R/MIP2015_12s.xlsx", sheet = "r", colNames = FALSE) # Remunerações
e = read.xlsx("Dados-IP-R/MIP2015_12s.xlsx", sheet = "e", colNames = FALSE) # Pessoal ocupado
c = read.xlsx("Dados-IP-R/MIP2015_12s.xlsx", sheet = "c", colNames = FALSE) # Consumo das famílias
sp = read.xlsx("Dados-IP-R/MIP2015_12s.xlsx", sheet = "sp", colNames = FALSE) # Setor de Pagamentos
Setores = read.xlsx("Dados-IP-R/MIP2015_12s.xlsx", sheet = "set", colNames = FALSE) # Setores
View(Z)
class(Z) # Verificar classe do objeto Z
class(y) # Verificar classe do objeto y
Z = data.matrix(Z) # Consumo intermediário
y = data.matrix(y) # Demanda final
x = data.matrix(x) # Valor Bruto da Produção
x = as.vector(x)   # Valor Bruto da Produção
v = data.matrix(v) # Valor adicionado
r = data.matrix(r) # Remunerações
e = data.matrix(e) # Pessoal ocupado
c = data.matrix(c) # Consumo das famílas
sp = data.matrix(sp) # Setor de Pagamentos
# Salvar base de dados no formato RData
save(Z, y, x, v, r, e, c, sp, Setores, file = "Dados-IP-R/MIP2015_12s.RData")
A
ls()
Zç
Z
Z |> class()
Z[1,]
Z[,1]
x
x |> length()
Z |> dim()
diag(1/x)
1/x
x
diag(1/x) |> dim()
Z%*%diag(1/x)
length(x)
n <- length(x)
diag(n)
diag(length(x))
A = Z %*% diag(1 / x) # Matriz de coeficientes técnicos
#View(A) # Matriz de coeficientes técnicos
n = length(x) # Número de setores
I = diag(n) # Matriz identidade
#View(I) # Matriz identidade
B = solve(I - A) # Matriz inversa de Leontief
B
dim(B)
Z
Z[1,1]
Z[1,2]
Z[1,3]
Z[1,]
sum(Z[1,])
rowSums(Z)
colSums(Z)
A
A[1,1]
A[1,2]
A[1,3]
A[2,1]
colSums(Z)
colSums(A)
rowSums(A)
B
B[1,1]
B[2,1]
colSums(B)
which.max(colSums(B))
ls()
c
r
# Leitura dos pacotes
pacman::p_load(openxlsx, knitr, kableExtra, dplyr, ggplot2, scales, ggrepel, tibble, gridExtra)
# Importação de dados no formato RData
load("MIP2015_12s.RData")
# Importação de dados no formato RData
load("Dados-IP-R/MIP2015_12s.RData")
A = Z %*% diag(1 / x) # Matriz de coeficientes técnicos
#View(A) # Matriz de coeficientes técnicos
n = length(x) # Número de setores
I = diag(n) # Matriz identidade
#View(I) # Matriz identidade
B = solve(I - A) # Matriz inversa de Leontief
r
c
x
sum(r)
sum(x)
sum(c)
hc = c / sum(r) # Coeficientes de consumo
hc
hr = r / x # Coeficientes de remuneração do trabalho (renda)
hr
c/x
A
A[,1]
A[1,1]
ls()
c
figaro <- read.csv(file = "figaroIO/matrix_eu-ic-io_ind-by-ind_23ed_2021.csv")
dim(figaro)
figaro[1:10,1:10]
figaroSpain <- figaro |>
dplyr::filter(rowLabels = starts_with(ES))
figaroSpain <- figaro |>
dplyr::filter(rowLabels = starts_with("ES"))
figaroSpain <- figaro |>
dplyr::filter(rowLabels == starts_with("ES"))
?starts_with
figaroSpain <- figaro |>
dplyr::filter(grepl(rowLabels, "ES"))
figaroSpain <- figaro |>
dplyr::filter(grepl(x = rowLabels, "ES"))
dim(figaro)
dim(figaroSpain)
figaroSpain[1:10,1:10]
figaroSpain <- figaro |>
select(rowLabels, starts_with("ES")) |>
dplyr::filter(grepl(x = rowLabels, "ES"))
dim(figaroSpain)
View(figaroSpain)
figaroSpainInd <- figaroSpain[1:64,1:64]
View(figaroSpainInd)
figaroSpainInd <- figaroSpain[1:64,1:65]
View(figaroSpainInd)
SpainX <- rowSums(figaroSpain)
figaroSpain <- figaro |>
select(rowLabels, starts_with("ES")) |>
dplyr::filter(grepl(x = rowLabels, "ES")) |>
tibble::column_to_rownames()
figaroSpain <- figaro |>
select(rowLabels, starts_with("ES")) |>
dplyr::filter(grepl(x = rowLabels, "ES")) |>
tibble::column_to_rownames(rowLabels)
figaroSpain <- figaro |>
select(rowLabels, starts_with("ES")) |>
dplyr::filter(grepl(x = rowLabels, "ES")) |>
tibble::column_to_rownames("rowLabels")
View(figaroSpain)
figaroSpainInd <- figaroSpain[1:64,1:64]
View(figaroSpainInd)
SpainX <- rowSums(figaroSpain)
SpainX
SpainX <- rowSums(figaroSpainInd)
SpainX
SpainZ <- figaroSpain[1:64,1:64]
SpainX <- rowSums(figaroSpainInd)
SpainA = SpainZ %*% diag(1 / SpainX)
diag(1 / SpainX)
diag(1 / SpainX)
SpainZ <- as.matrix(figaroSpainInd)
SpainX <- as.matrix(SpainOutput)
SpainOutput <- rowSums(figaroSpainInd)
SpainX <- as.matrix(SpainOutput)
SpainX
SpainZ
SpainA = SpainZ %*% diag(1 / SpainX)
dim(SpainZ)
dim(SpainX)
dim(diag(1 / SpainX) )
pelo <- diag(1 / SpainX)
pelo
x
SpainX <- rowSums(figaroSpainInd)
dim(diag(1 / SpainX) )
SpainA = SpainZ %*% diag(1 / SpainX)
SpainA
rowsum(SpainA)
rowSums(SpainA)
rowSums(SpainA, na.rm = TRUE)
direct <- rowSums(SpainA, na.rm = TRUE)
which.max(direct)
direct[which.max(direct)]
sort(direct)
sort(-direct)
sort(direct, decreasing = TRUE)
e
figaroUse <- read.csv(file = "figaroIO/matrix_eu-ic-use_23ed_2021.csv")
figaroSpainUse <- figaroUse |>
select(rowLabels, starts_with("ES")) |>
dplyr::filter(grepl(x = rowLabels, "ES")) |>
tibble::column_to_rownames("rowLabels")
dim(figaroSpainUse)
View(figaroSpainUse)
# Leitura dos pacotes
pacman::p_load(openxlsx, knitr, kableExtra, dplyr, ggplot2, scales, ggrepel, tibble, gridExtra)
load("Dados-IP-R/MIP2015_12s.RData")
gptstudio:::addin_chatgpt()
#| eval: false
## analyst_number_calculation
Analysts_update <- New_analysts_January + New_analysts_February + New_analysts_March
#| eval: false
install.packages(emoji)
library(emoji)
repeat_2 <- rep(1:4, 4)
repeat_2
repeat_3 <- rep(1:4, each = 4)
repeat_3
repeat_4 <- rep(1:4, each=2, times=2)
repeat_4
repeat_5 <- rep(1:4, c(2,3,4,5,5))
repeat_2 <- rep(1:4, 4)
repeat_2
repeat_3 <- rep(1:4, each = 4)
repeat_3
repeat_4 <- rep(1:4, each=2, times=2)
repeat_4
repeat_5 <- rep(1:4, c(2,3,4,5,5))
repetido_2 <- rep(1:4, 4)
repetido_2
repetido_3 <- rep(1:4, each = 4)
repetido_3
repetido_4 <- rep(1:4, each=2, times=2)
repetido_4
repetido_5 <- rep(1:4, c(2,3,4,5))
repetido_5
repeat_2 <- rep(1:4, 4)
repeat_2
repeat_3 <- rep(1:4, each = 4)
repeat_3
repeat_4 <- rep(1:4, each=2, times=2)
repeat_4
repeat_5 <- rep(1:4, c(2,3,4,5,5))
repetido_2 <- rep(1:4, 4)
repetido_2
repetido_3 <- rep(1:4, each = 4)
repetido_3
repetido_4 <- rep(1:4, each=2, times=2)
repetido_4
repetido_5 <- rep(1:4, c(2,3,4,5))
repetido_5
rep(1:4, each=2, times=2)
repeat_2 <- rep(1:4, 4)
repeat_2
repeat_3 <- rep(1:4, each = 4)
repeat_3
repeat_4 <- rep(1:4, each=2, times=2)
repeat_4
repeat_5 <- rep(1:4, c(2,3,4,5))
repeat_5
A <- matrix(vector_6, nrow = 4, ncol = 2, byrow = TRUE)
vector_6 <- seq(8)
vector_6
A <- matrix(vector_6)
A
A <- matrix(vector_6, nrow = 4, ncol = 2)
A
A <- matrix(vector_6, nrow = 4, ncol = 2, byrow = TRUE)
A
rownames(A)
colnames(A)
rownames(A) <- c("row_1", "row_2", "row_3", "row_4")
colnames(A) <- c("column_1", "column_2")
rownames(A)
colnames(A)
A
dimnames(A)
A
A[1,1]
A[3,2]
A["row_2", "column_2"]
A[1:2, 1]
A[c("row_1", "row_4"), 2]
A
matrix_A <- matrix(data = runif(n = 8, min = 10, max = 50), nrow = 2, ncol = 4)
matrix_B <- matrix(data = runif(n = 4, min = 10, max = 50), nrow = 1, ncol = 4)
matrix_A
matrix_B
matrix_A <- matrix(data = runif(n = 8, min = 10, max = 50), nrow = 2, ncol = 4)
matrix_B <- matrix(data = runif(n = 2, min = 10, max = 50), nrow = 2, ncol = 1)
matrix_A
matrix_B
matrix_AB <- cbind(matrix_A, matrix_B)
matrix_AB
matrix_C <- matrix(data = runif(n = 4, min = 10, max = 50), nrow = 1, ncol = 4)
matrix_ABC <- rbind(matrix_AB, matrix_C)
matrix_C <- matrix(data = runif(n = 4, min = 10, max = 50), nrow = 1, ncol = 4)
matrix_C
matrix_ABC <- rbind(matrix_AB, matrix_C)
matrix_C <- matrix(data = runif(n = 5, min = 10, max = 50), nrow = 1, ncol = 5)
matrix_C
matrix_ABC <- rbind(matrix_AB, matrix_C)
matrix_ABC
?`$`
?`[`
getElement(mtcars, "cyl")
mtcars$cyl
getElement
mtcars[["cyl"]]
colnames(mtcars)
mtcars[[2]]
figaro <- read.csv(file = "figaroIO/matrix_eu-ic-io_ind-by-ind_23ed_2021.csv")
figaro |>
select(rowLabels, starts_with("ES"))
# Leitura dos pacotes
pacman::p_load(openxlsx, knitr, kableExtra, dplyr, ggplot2, scales, ggrepel, tibble, gridExtra)
figaro |>
select(rowLabels, starts_with("ES"))
figaro |>
select(rowLabels, starts_with("ES")) |> tail()
figaro |>
select(rowLabels, starts_with("ES")) |> tail()
figaro |>
select(rowLabels, starts_with("ES")) |> tail(20)
figaro |>
select(rowLabels, starts_with("ES")) |> tail(10)
figaro |>
select(rowLabels, starts_with("ES")) |> tail(10) |> head(4)
figaro |>
select(rowLabels, starts_with("ES")) |> tail() |> head(4)
figaroSpainGVA <- figaro |>
select(rowLabels, starts_with("ES")) |>
tail() |>
head(4)
figaroSpain <- figaro |>
select(rowLabels, starts_with("ES")) |>
dplyr::filter(grepl(x = rowLabels, "ES")) |>
tibble::column_to_rownames("rowLabels")
figaroSpainInd <- figaroSpain[1:64,1:64]
View(figaroSpain)
figaroSpainDemand <- figaroSpain |>
select(rowLabels, starts_with("ES_P"))
figaroSpainDemand <- figaroSpain |>
select(starts_with("ES_P"))
View(figaroSpainDemand)
figaroSpainDemand <- figaroSpain |>
select(starts_with("ES_P"))|>
dplyr::filter(grepl(x = rowLabels, "ES"))
figaroSpain <- figaro |>
select(rowLabels, starts_with("ES")) |>
dplyr::filter(grepl(x = rowLabels, "^ES")) |>
tibble::column_to_rownames("rowLabels")
figaroSpainDemand <- figaroSpain |>
select(starts_with("ES_P"))
View(figaroSpainDemand)
figaroSpainDemand <- figaroSpain |>
select(starts_with("ES_P3"), starts_with("ES_P5"))
View(figaroSpainDemand)
rownames(figaroSpain)
rownames(figaroSpain) |> length()
colnames(figaroSpain)
colnames(figaroSpain) |> length()
figaroSpainGVA
View(figaroSpainGVA)
figaroSpainGVA <- figaro |>
select(rowLabels, starts_with("ES")) |>
tail() |>
head(4)|>
tibble::column_to_rownames("rowLabels")
figaroSpainGVA <- figaro |>
select(rowLabels, starts_with("ES")) |>
tail() |>
head(4)#|>
figaroSpainGVA |> class()
figaroSpainGVA <- figaro |>
select(rowLabels, starts_with("ES")) |>
tibble::column_to_rownames("rowLabels") |>
tail() |>
head(4)
View(figaroSpainGVA)
View(figaroSpainGVA)
figaroSpainGVA <- figaro |>
select(rowLabels, starts_with("ES")) |>
select(-starts_with("ES_P3"), -starts_with("ES_P5")) |>
tibble::column_to_rownames("rowLabels") |>
tail() |>
head(4)
View(figaroSpainGVA)
rownames(figaroSpain)
rownames(figaroSpain) |> length()
colnames(figaroSpain)
colnames(figaroSpain) |> length()
figaroSpainInd <- figaroSpain |>
select(-starts_with("ES_P3"), -starts_with("ES_P5")) |>
SpainX <- rowSums(figaroSpainInd)
figaroSpainInd <- figaroSpain |>
select(-starts_with("ES_P3"), -starts_with("ES_P5"))
figaroSpainInd |> dim()
colnames(figaroSpainInd)
rownames(figaroSpainInd)
colnames(figaroSpain)
rownames(figaroSpain)
figaroSpainOutput <- figaroSpain |>
mutate(output = rowSums(pick(where(is.numeric))))
colnames(figaroSpain)
colnames(figaroSpainOutput)
figaroSpainOutput[1:2]
figaroSpainOutput[1:2,]
sum(figaroSpain$ES_A01)
figaroSpain$ES_A01
figaroSpain[1,]
figaroSpain[1,] |> sum()
figaroSpain[2,] |> sum()
figaroSpainOutput <- figaroSpain |>
mutate(output = rowSums(pick(where(is.numeric)))) |>
select(output)
figaroSpainOutput
SpainA = SpainZ %*% diag(1 / SpainX)
direct <- rowSums(SpainA, na.rm = TRUE)
direct[which.max(direct)]
sort(direct, decreasing = TRUE)
SpainX <- as.matrix(figaroSpainOutput)
SpainZ <- as.matrix(figaroSpainInd)
SpainX
SpainZ
SpainZ |> dim()
SpainX |> dim()
SpainX
diag(1 / SpainX)
SpainX <- figaroSpainOutput
SpainZ <- as.matrix(figaroSpainInd)
SpainA = SpainZ %*% diag(1 / SpainX)
SpainX <- figaroSpainOutput
SpainZ <- as.matrix(figaroSpainInd)
SpainX |> as.vector()
SpainX <- figaroSpainOutput |>
as.vector()
diag(1 / SpainX)
SpainX <- figaroSpainOutput |>
as.vector()
SpainX |> class()
SpainX <- figaroSpainOutput |>
unlist()
SpainX |> class()
SpainX
figaroSpainOutput |> as.vector() |> unlist()
figaroSpainOutput |> as.vector()
rowSums(figaroSpainInd)
gptstudio:::addin_chatgpt()
gptstudio:::addin_chatgpt()
figaroSpainOutput
figaroSpainOutput |> as.vector()
figaroSpainOutput |> as.vector() |> class()
figaroSpainOutput |> unlist()
figaroSpainOutput |> as.numeric()
figaroSpainOutput$output |> as.vector()
rownames(figaroSpainOutput$output |> as.vector()) <- row.names(figaroSpainOutput)
rownames(figaroSpainOutput$output |> as.vector()) <- rownames(figaroSpainOutput)
names(figaroSpainOutput$output |> as.vector()) <- rownames(figaroSpainOutput)
names(figaroSpainOutput$output |> as.vector()) <- rownames(figaroSpainOutput)
SpainX <- figaroSpainOutput$output |>
as.vector()
SpainX
names(SpainX) <- rownames(figaroSpainOutput)
SpainX
diag(1 / SpainX)
SpainA = SpainZ %*% diag(1 / SpainX)
direct <- rowSums(SpainA, na.rm = TRUE)
direct
direct[which.max(direct)]
sort(direct, decreasing = TRUE)
# Número de setores
n = length(x)
x <- figaroSpainOutput$output |>
as.vector()
names(SpainX) <- rownames(figaroSpainOutput)
Z <- as.matrix(figaroSpainInd)
A = Z %*% diag(1 / X)
A = Z %*% diag(1 / x)
# Número de setores
n = length(x)
n
I = diag(n)
# Matriz inversa de Leontief
B = solve(I - A)
total <- rowSums(SpainA, na.rm = TRUE)
total
total[which.max(total)]
direct[which.max(direct)]
direct
A[1,1]
B[1,1]
total <- colSums(SpainA, na.rm = TRUE)
total
total <- colSums(B, na.rm = TRUE)
total
total[which.max(total)]
sort(total, decreasing = TRUE)
sort(total, decreasing = TRUE)
list.files(pattern = "^figaro")
ls(pattern = "^figaro")
ls()
ls(pattern = "^figaro")
ls(pattern = "^figaro")
figaroSpain
figaroSpain |> colnames()
figaroSpain |> colnames() |> substr(1,4)
figaroSpain |> colnames() |> substr(1,4) |> unique()
figaroSpain |> colnames() |> substr(1,4) |> unique() |> length()
150/20
